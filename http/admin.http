### admin login
POST {{host}}/api/auth/login
Content-Type: Application/json

{
    "username": "{{username-admin}}",
    "password": "{{password-admin}}"
}

> {%
    client.test("Validate", function() { // Validate라는 이름의 테스트를 수행
        client.assert(response.status === 200, "Response status is not 200"); // 응답값이 200이면 통과
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'"); // 응답값이 application/json이면 통과
        client.assert(response.body.accessToken.trim().length > 0); // 토큰 길이가 0보다 크면 통과
        client.assert(response.body.refreshToken.trim().length > 0);
    });

    client.global.set("accessToken", response.body.accessToken);
    client.global.set("refreshToken", response.body.refreshToken);
    // client.log(client.global.get("accessToken"));
    // client.log(client.global.get("refreshToken"));
%}

### 회원 전체 조회
GET {{host}}/api/admin/members
Authorization: Bearer {{accessToken}}

### 회원 지정 조회
GET{{host}}/api/admin/members/2
Authorization: Bearer {{accessToken}}

### 회원 조건 검색 : 이메일
GET {{host}}/api/admin/members?email=user1000@test.com
Authorization: Bearer {{accessToken}}

### 회원 조건 검색 : 이름
GET {{host}}/api/admin/members?name=user1001
Authorization: Bearer {{accessToken}}

### 회원 조건 검색 : 상태
GET {{host}}/api/admin/members?status=BLOCKED
Authorization: Bearer {{accessToken}}

### 회원 삭제
DELETE {{host}}/api/admin/members/11
Authorization: Bearer {{accessToken}}

### 회원 블랙 처리
PATCH {{host}}/api/admin/members/10/block
Authorization: Bearer {{accessToken}}

### 로그아웃
POST {{host}}/api/auth/logout
Content-Type: Application/json
Authorization: Bearer {{accessToken}}

{
    "username": "{{username-admin}}"
}
