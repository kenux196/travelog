plugins {
	id 'java'
//	id 'org.springframework.boot' version '2.7.7'
//	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.flywaydb.flyway" version "8.0.1" // TODO - flyway 버전 업데이트 필요. 2023-01-19 sky
}

group = 'me.kenux'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

//ext['spring-security.version']='5.8.1' // spring security for spring 2.7.x

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // TODO - 타임리프 제거 2023-01-19 sky
    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    // Querydsl for spring boot 2.x
//    implementation 'com.querydsl:querydsl-jpa'
//    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Querydsl for spring boot 3.0
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // flyway db migration
    implementation 'org.flywaydb:flyway-core'

    // jwt : https://github.com/jwtk/jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 설정파일 암호화
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70', 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
    delete file('src/main/generated')
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

flyway {
    configFiles = ["${file('src/main/resources/db/config/flyway-' + profile + '.conf').absolutePath}"]
    locations = ["filesystem:${file('src/main/resources/db/sql').absolutePath}"]
    encoding = 'UTF-8'
    outOfOrder = true // 여러브랜치에서 서로 다른 날짜로 만들어도 작동하도록
    validateOnMigrate = true
    // locations = ["classpath:sql"] gradle CLI 를 사용하는 경우 classpath 는 인식 하지 못함.
}

tasks.named('test') {
	useJUnitPlatform()
}
